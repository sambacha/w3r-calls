{"version":3,"file":"web3-contract-calls.cjs.production.min.js","sources":["../src/chainState/context.ts","../src/useChainCalls.ts","../src/useContractCall.ts","../node_modules/regenerator-runtime/runtime.js","../src/chainState/multicall.ts","../src/chainState/callsReducer.ts","../src/chainState/chainStateReducer.ts"],"sourcesContent":["import { createContext, useContext } from 'react'\nimport { Action } from './callsReducer'\nimport { ChainState } from './model'\n\nexport const ChainStateContext = createContext<{\n  value?: {\n    blockNumber: number\n    state?: ChainState\n    error?: unknown\n  }\n  multicallAddress: string | undefined\n  dispatchCalls: (action: Action) => void\n}>({\n  multicallAddress: '',\n  dispatchCalls: () => {\n    // empty\n  },\n})\n\nexport function useChainState() {\n  return useContext(ChainStateContext)\n}\n","import { useContext, useEffect, useMemo } from 'react'\n\nimport { ChainCall } from './chainState/callsReducer'\nimport { ChainStateContext } from './chainState/context'\nimport { Falsy } from './model/types'\n\nexport function useChainCalls(calls: (ChainCall | Falsy)[]) {\n  const { dispatchCalls, value } = useContext(ChainStateContext)\n\n  useEffect(() => {\n    const filteredCalls = calls.filter(Boolean) as ChainCall[]\n    dispatchCalls({ type: 'ADD_CALLS', calls: filteredCalls })\n    return () => dispatchCalls({ type: 'REMOVE_CALLS', calls: filteredCalls })\n  }, [JSON.stringify(calls), dispatchCalls])\n\n  return useMemo(() => calls.map((call) => call && value?.state?.[call.address]?.[call.data]), [\n    JSON.stringify(calls),\n    value,\n  ])\n}\n\nexport function useChainCall(call: ChainCall | Falsy) {\n  return useChainCalls([call])[0]\n}\n","import { ChainCall } from './chainState/callsReducer'\nimport { Falsy } from './model/types'\nimport { Interface } from '@ethersproject/abi'\nimport { useChainCalls } from './useChainCalls'\nimport { useMemo } from 'react'\n\nfunction warnOnInvalidContractCall(call: ContractCall | Falsy) {\n  console.warn(\n    `Invalid contract call: address=${call && call.address} method=${call && call.method} args=${call && call.args}`\n  )\n}\n\nfunction encodeCallData(call: ContractCall | Falsy): ChainCall | Falsy {\n  if (!call || !call.address || !call.method) {\n    warnOnInvalidContractCall(call)\n    return undefined\n  }\n  try {\n    return { address: call.address, data: call.abi.encodeFunctionData(call.method, call.args) }\n  } catch {\n    warnOnInvalidContractCall(call)\n    return undefined\n  }\n}\n\nexport interface ContractCall {\n  abi: Interface\n  address: string\n  method: string\n  args: any[]\n}\n\nexport function useContractCall(call: ContractCall | Falsy): any[] | undefined {\n  return useContractCalls([call])[0]\n}\n\nexport function useContractCalls(calls: (ContractCall | Falsy)[]): (any[] | undefined)[] {\n  const results = useChainCalls(calls.map(encodeCallData))\n\n  return useMemo(\n    () =>\n      results.map((result, idx) => {\n        const call = calls[idx]\n        if (result === '0x') {\n          warnOnInvalidContractCall(call)\n          return undefined\n        }\n        return call && result ? (call.abi.decodeFunctionResult(call.method, result) as any[]) : undefined\n      }),\n    [results]\n  )\n}\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","import { BigNumber } from '@ethersproject/bignumber'\nimport { Contract } from '@ethersproject/contracts'\nimport { Provider } from '@ethersproject/providers'\nimport { ChainCall } from './callsReducer'\nimport { ChainState } from './model'\n\nconst ABI = [\n  'function aggregate(tuple(address target, bytes callData)[] calls) view returns (uint256 blockNumber, bytes[] returnData)',\n]\n\nexport async function multicall(\n  provider: Provider,\n  address: string,\n  blockNumber: number,\n  requests: ChainCall[]\n): Promise<ChainState> {\n  if (requests.length === 0) {\n    return {}\n  }\n  const contract = new Contract(address, ABI, provider)\n  const [, results]: [BigNumber, string[]] = await contract.aggregate(\n    requests.map(({ address, data }) => [address, data]),\n    { blockTag: blockNumber }\n  )\n  const state: ChainState = {}\n  for (let i = 0; i < requests.length; i++) {\n    const { address, data } = requests[i]\n    const result = results[i]\n    const stateForAddress = state[address] ?? {}\n    stateForAddress[data] = result\n    state[address] = stateForAddress\n  }\n  return state\n}\n","export type Action = AddCall | RemoveCall\n\nexport interface ChainCall {\n  address: string\n  data: string\n}\n\ninterface AddCall {\n  type: 'ADD_CALLS'\n  calls: ChainCall[]\n}\n\ninterface RemoveCall {\n  type: 'REMOVE_CALLS'\n  calls: ChainCall[]\n}\n\nexport function callsReducer(state: ChainCall[] = [], action: Action) {\n  if (action.type === 'ADD_CALLS') {\n    return [...state, ...action.calls]\n  } else {\n    let finalState = state\n    for (const call of action.calls) {\n      const index = finalState.findIndex((x) => x.address === call.address && x.data === call.data)\n      if (index !== -1) {\n        finalState = finalState.filter((_, i) => i !== index)\n      }\n    }\n    return finalState\n  }\n}\n","import { ChainState } from './model'\n\nexport interface State {\n  [chainId: number]:\n    | {\n        blockNumber: number\n        state?: ChainState\n        error?: unknown\n      }\n    | undefined\n}\n\ntype Action = FetchSuccess | FetchError\n\ninterface FetchSuccess {\n  type: 'FETCH_SUCCESS'\n  chainId: number\n  blockNumber: number\n  state: ChainState\n}\n\ninterface FetchError {\n  type: 'FETCH_ERROR'\n  chainId: number\n  blockNumber: number\n  error: unknown\n}\n\nexport function chainStateReducer(state: State = {}, action: Action) {\n  const current = state[action.chainId]?.blockNumber\n  if (!current || action.blockNumber >= current) {\n    if (action.type === 'FETCH_SUCCESS') {\n      let newState = action.state\n      if (action.blockNumber === current) {\n        // merge with existing state to prevent requests coming out of order\n        // from overwriting the data\n        const oldState = state[action.chainId]?.state ?? {}\n        for (const [address, entries] of Object.entries(oldState)) {\n          newState = {\n            ...newState,\n            [address]: {\n              ...entries,\n              ...newState[address],\n            },\n          }\n        }\n      }\n      return {\n        ...state,\n        [action.chainId]: { blockNumber: action.blockNumber, state: newState },\n      }\n    } else if (action.type === 'FETCH_ERROR') {\n      return {\n        ...state,\n        [action.chainId]: { ...state[action.chainId], blockNumber: action.blockNumber, error: action.error },\n      }\n    }\n  }\n  return state\n}\n"],"names":["ChainStateContext","createContext","multicallAddress","dispatchCalls","useChainCalls","calls","useContext","value","useEffect","filteredCalls","filter","Boolean","type","JSON","stringify","useMemo","map","call","state","_value$state","address","_value$state$call$add","data","warnOnInvalidContractCall","console","warn","method","args","encodeCallData","abi","encodeFunctionData","useContractCalls","results","result","idx","decodeFunctionResult","undefined","runtime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","key","defineProperty","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","generator","create","Generator","context","Context","_invoke","arg","Error","done","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","makeInvokeMethod","fn","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","__await","then","unwrapped","error","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","doneResult","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","module","regeneratorRuntime","accidentalStrictMode","globalThis","Function","ABI","provider","blockNumber","requests","contract","Contract","aggregate","blockTag","stateForAddress","action","finalState","index","findIndex","x","_","current","chainId","_state$action$chainId","newState","oldState","_state$action$chainId3","entries"],"mappings":"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"}